# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: The pass by prototype
  description: the sample of swagger2
  version: "1.0.0"
# the domain of the service
host: api.thepassby.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  # This is a path endpoint. Change it.
  /region:
    post:
      summary: regions
      description: |
        region such as country, city, street, number.
      parameters:
        - name: region
          in: body
          description: region.
          required: true
          schema:
            $ref: '#/definitions/Region'
      tags:
        - Products
      responses:
        200:
          description: An Region that has been created
          schema:
           $ref: '#/definitions/Region'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: get an array region by level
      description: |
        get an array of region by level
      parameters:
        - name: level
          in: query
          description: the level of region
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: An array of region
          schema:
            type: array
            items:
              $ref: '#/definitions/Region'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /region/{iid}:
    # paramaters
    parameters:
      - name: iid
        in: path
        description: get region of iid
        required: true
        type: integer
        format: int32
    delete:
      summary: delete a Region by iid
      description: |
        delete a Region by iid
      responses:
        200:
          description: An Region that has been created
          schema:
           $ref: '#/definitions/Region'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: update a region with iid
      description: |
        update a region with iid
      parameters:
        - name: region
          in: body
          description: update instance
          required: true
          schema:
            $ref: '#/definitions/Region'
      responses:
        200:
          description: An Region of update result
          schema:
            type: object
            items:
              $ref: '#/definitions/Region'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    
  /human:
    post:
      summary: create a human instance
      description: |
        this is a description of create human instance
      parameters:
        - name: human
          in: body
          description: description of create
          required: true
          schema:
            $ref: '#/definitions/Human'
      responses:
        200:
          description: An Human that has been created
          schema:
           $ref: '#/definitions/Human'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: get an array of Human by params
      description: |
        get an array of Human by name, sex
      parameters:
        - name: name
          in: query
          type: string
          description: name of human
          required: false
        - name: sex
          in: query
          type: string
          description: sex of human
          required: false
      responses:
        200:
          description: An array of Region
          schema:
            type: array
            items:
              $ref: '#/definitions/Region'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  
  /human/{iid}:
    parameters:
      - name: iid
        in: path
        type: integer
        format: int32
        description: iid of human
        required: true
    put:
      summary: update lucky by iid
      description: |
        update lucky by iid
      parameters:
        - name: lucky
          in: query
          type: number
          format: double
          required: true
          description: the new lucky
      responses:
        200:
          description: An Human that has been created
          schema:
           $ref: '#/definitions/Human'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


definitions:
  Human:
    type: object
    properties:
      iid:
        type: integer
        format: int32
        description: auto increase id.
      name:
        type: string
      birthday:
        type: string
        description: format yyyy-mm-dd.
      sex:
        type: string
      lucky:
        type: number
        format: double
      occupation:
        type: array
        items:
          $ref: '#/definitions/Occupation'
      contact:
        type: array
        items:
          $ref: '#/definitions/Contact'
  Occupation:
    type: object
    properties:
      name:
        type: string
      type:
        type: string
      scale:
        type: string
      locate:
        type: string
  Contact:
    type: object
    properties:
      tel:
        type: integer
        format: int32
      email:
        type: string
      site:
        type: string
      addresss:
        type: array
        items:
          $ref: '#/definitions/Address'
  Address:
    type: object
    properties:
      country:
        type: string
      city:
        type: string
      street:
        type: string
      number:
        type: string
      zipcode:
        type: integer
        format: int32
  Region:
    type: object
    properties:
      iid: 
        type: integer
        format: int32
      level:
        type: integer
        format: int32
      name:
        type: string
      code:
        type: string
      parent:
        type: string
      description:
        type: string
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string


























